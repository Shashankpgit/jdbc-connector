name: Release JDBC Connector with Dependencies

on:
  push:
    tags:
      - 'v*'  # Triggers on tags like v1.0.0, v2.3.1, etc.

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:

    # Step 1: Checkout JDBC Connector Repo
    - name: 📥 Checkout JDBC Connector Code
      uses: actions/checkout@v4

    # Step 2: Set up Java 11 (LTS)
    - name: ☕ Set up Java 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'maven'  # Enable Maven dependency caching

    # Step 3: Clone and Build job-sdk-scala (dependency)
    - name: 🧱 Clone job-sdk-scala
      run: git clone https://github.com/Sunbird-Obsrv/job-sdk-scala.git

    - name: 🔨 Build job-sdk-scala
      run: |
        cd job-sdk-scala
        mvn clean install

    # Step 4: Clone and Build connector-sdk-scala (depends on job-sdk)
    - name: 🧱 Clone connector-sdk-scala
      run: git clone https://github.com/Sunbird-Obsrv/connector-sdk-scala.git

    - name: 🔨 Build connector-sdk-scala
      run: |
        cd connector-sdk-scala
        mvn clean install

    # Step 5: Build the JDBC connector
    - name: 🏗️ Build JDBC Connector
      run: mvn clean package -DskipTests

    # Step 6: Prepare dist directory for packaging
    - name: 📂 Prepare dist directory
      run: |
        mkdir dist
        cp target/*.jar dist/
        cp README.md dist/ || true  # Optional: include README
        echo "Version: ${GITHUB_REF#refs/tags/}" > dist/VERSION.txt

    # Step 7: Create dist.tar.gz archive
    - name: 📦 Create dist.tar.gz archive
      run: tar -czvf dist.tar.gz dist/

    # Step 8: Upload .tar.gz as release asset
    - name: 🚀 Upload Release Asset
      uses: softprops/action-gh-release@v2
      with:
        files: dist.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
